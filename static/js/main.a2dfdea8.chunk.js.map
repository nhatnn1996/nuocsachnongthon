{"version":3,"sources":["components/search/index.js","components/water-bill/index.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","Search","Input","Title","Typography","years","currentYear","Date","getFullYear","i","push","TopSearch","waterBill","useContext","WarterBillCtx","useState","year","setYear","className","span","level","placeholder","showSearch","style","width","size","onChange","value","map","element","key","enterButton","onSearch","setStore","store","loading","fetch","then","response","json","data","bill","message","error","columns","title","dataIndex","render","text","toLocaleString","currency","type","showIcon","ResultBill","props","showData","totalcount","listobject","index","dataSource","TableBill","createContext","App","Provider","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a2dfdea8.chunk.js","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { Input, Row, Col, Select, Typography, message } from \"antd\";\nimport { WarterBillCtx } from \"../../App\";\nimport \"./index.css\";\n\nconst { Option } = Select;\nconst { Search } = Input;\nconst { Title } = Typography;\n\nconst years = [];\n\nconst d = new Date();\nconst currentYear = d.getFullYear();\n\nfor (let i = currentYear; i > currentYear - 30; i--) {\n  years.push(i);\n}\n\nconst TopSearch = () => {\n  const waterBill = useContext(WarterBillCtx);\n\n  const [year, setYear] = useState();\n  const onSearch = (value) => {\n    if (!year) {\n      message.error(\"Vui lòng chọn năm\");\n    } else if (!value) {\n      message.error(\"Xin hãy nhập mã khách hàng\");\n    } else {\n      waterBill.setStore({ ...waterBill.store, loading: true });\n      const base =\n        \"http://app.nuocnongthon.binhdinh.vn/gCityworkServices/rest/gcrmpl/gsv_data/CN0104/khachhangs/LayThongTinChiTiet?maKhachHang=\" +\n        value +\n        \"&&tuNgay=\" +\n        year +\n        \"-01-01&denNgay=\" +\n        year +\n        \"-12-01\";\n      fetch(base)\n        .then((response) => response.json())\n        .then((data) => {\n          waterBill.setStore({ loading: false, bill: data });\n        });\n    }\n  };\n\n  return (\n    <Row className=\"top-search\">\n      <Col span={4}>\n        <Title level={4}></Title>\n      </Col>\n      <Col span={6}>\n        <Select\n          placeholder=\"Nhập năm tra cứu\"\n          showSearch\n          style={{ width: \"80%\" }}\n          size=\"large\"\n          onChange={(value) => {\n            setYear(value);\n          }}\n        >\n          {years.map((element) => (\n            <Option value={element} key={element}>\n              Năm {element}\n            </Option>\n          ))}\n        </Select>\n      </Col>\n      <Col span={8}>\n        <Search enterButton=\"Tra cứu\" placeholder=\"Nhập mã khách hàng\" size=\"large\" onSearch={onSearch} />\n      </Col>\n    </Row>\n  );\n};\n\nexport default TopSearch;\n","import React, { useContext } from \"react\";\nimport { Spin, Space, Empty, Table, Alert } from \"antd\";\nimport { WarterBillCtx } from \"../../App\";\nimport \"./index.css\";\n\nconst columns = [\n  {\n    title: \"Tên khách hàng\",\n    dataIndex: \"tenKhachHang\",\n    key: \"tenKhachHang\",\n    render: (text) => <i>{text}</i>,\n  },\n  {\n    title: \"Seri đồng hồ\",\n    dataIndex: \"seriDongHo\",\n    key: \"seriDongHo\",\n  },\n  {\n    title: \"Năm\",\n    dataIndex: \"nam\",\n    key: \"maDoiTuong\",\n  },\n  {\n    title: \"Tháng\",\n    dataIndex: \"thang\",\n    key: \"maDoiTuong\",\n  },\n  {\n    title: \"Chỉ số đầu\",\n    dataIndex: \"chiSoDau\",\n    key: \"chiSoDau\",\n    render: (text) => <b>{text}</b>,\n  },\n  {\n    title: \"Chỉ số cuối\",\n    dataIndex: \"chiSoCuoi\",\n    key: \"chiSoCuoi\",\n    render: (text) => <b>{text}</b>,\n  },\n  {\n    title: \"Tiêu thụ\",\n    dataIndex: \"tieuThu\",\n    key: \"tieuThu\",\n    render: (text) => <b>{text}</b>,\n  },\n  {\n    title: \"Tổng tiền\",\n    dataIndex: \"tongTien\",\n    key: \"tongTien\",\n    render: (text) => <b>{text.toLocaleString(\"vi\", { style: \"currency\", currency: \"VND\" })}</b>,\n  },\n  {\n    title: \"Đã thanh toán\",\n    dataIndex: \"daThanhToan\",\n    key: \"daThanhToan\",\n    render: (text) => (\n      <b>\n        {text === true ? (\n          <Alert message=\"Đã thanh toán\" type=\"success\" showIcon />\n        ) : (\n          <Alert message=\"Chưa thanh toán\" type=\"warning\" showIcon />\n        )}\n      </b>\n    ),\n  },\n];\n\nconst ResultBill = (props) => {\n  let showData = props.store.bill && props.store.bill.totalcount > 0 ? true : false;\n\n  if (!showData)\n    return (\n      <Space className=\"wrap\">\n        <Empty />\n      </Space>\n    );\n  if (showData) {\n    const data = props.store.bill.listobject.map((element, index) => {\n      element.key = index;\n      return element;\n    });\n\n    return <Table dataSource={data} columns={columns} />;\n  }\n};\n\nconst TableBill = () => {\n  const { store } = useContext(WarterBillCtx);\n  return (\n    <div className=\"result-bill\">\n      {store.loading === true && (\n        <Space className=\"wrap\">\n          <Spin size=\"large\" />\n        </Space>\n      )}\n      {!store.loading && <ResultBill store={store} />}\n    </div>\n  );\n};\n\nexport default TableBill;\n","import React, { createContext, useState } from \"react\";\nimport Search from \"./components/search\";\nimport WarterBill from \"./components/water-bill\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\n\nexport const WarterBillCtx = createContext();\n\nfunction App() {\n  const [store, setStore] = useState({});\n  return (\n    <div className=\"App\">\n      <WarterBillCtx.Provider value={{ store, setStore }}>\n        <header className=\"App-header\">Ứng dụng tra cứu tiền nước</header>\n        <main className=\"Main\">\n          <Search />\n          <WarterBill />\n        </main>\n      </WarterBillCtx.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}